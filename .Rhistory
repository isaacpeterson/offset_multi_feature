function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list)))
cost_data
source('~/Documents/Emrys_job/Emrys_job.R', echo=TRUE)
warnings()
names_list[[1]]
source('~/Documents/Emrys_job/Emrys_job.R', echo=TRUE)
names_list[[1]]
names_list[[2]]
names_list[[3]]
names_list[[4]]
names_list[[5]]
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list)))
driver_data
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
select_service_group <- function(current_service_data, current_names_list){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = as.numeric(current_service_data[[which(names(current_service_data) %in% rate_names_list)]])
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list)))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list)))
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list)))
select_service_group <- function(current_service_data, current_names_list){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = as.numeric(current_service_data[[elements_to_use]])
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list)))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list)))
driver_data
i = 1
j = 1
select_service_group(full_service_list[[i]][[j]], driver_names_list)
a = select_service_group(full_service_list[[i]][[j]], driver_names_list)
unique(a)
length(unique(a))
table(a)
aa = table(a)
aa
aa[1]
aa[2]
summary(aa)
mean(table)
aa
as.vector(aa)
driver_data
job_numbers <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(job_numbers[[i]]),
function(j) as.vector(table(job_numbers[[i]][[j]]))))
job_numbers <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers
hist(unlist(job_numbers))
unlist(job_numbers)
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(unlist(table(driver_data[[i]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
hist(unlist(job_numbers_yearly))
unlist(job_numbers_yearly)
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_yearly
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
driver_numbers_monthly
hist(unlist(driver_numbers_monthly))
driver_numbers_monthly
driver_numbers_monthly[[1]]
hist(unlist(driver_numbers_monthly[[1]]))
hist(unlist(driver_numbers_monthly[[2]]))
hist(unlist(driver_numbers_monthly[[3]]))
hist(unlist(driver_numbers_monthly[[4]]))
hist(unlist(driver_numbers_monthly[[5]]))
all_names_list
all_names_list[[5]][[23]]
full_service_list[[5]][[23]]$ProductType
all_names_list
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list)))
product_names_list = c('ProductType', 'Product')
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list)))
warnings()
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numerical')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numerical')))
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list, data_type = 'character')))
job_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
select_service_group <- function(current_service_data, current_names_list, data_type){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = current_service_data[[elements_to_use]]
if (data_type == 'numerical'){
current_service_data_element = as.numeric
}
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numerical')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numerical')))
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list, data_type = 'character')))
job_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
select_service_group <- function(current_service_data, current_names_list, data_type){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = current_service_data[[elements_to_use]]
if (data_type == 'numerical'){
current_service_data_element = as.numeric
}
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numerical')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numerical')))
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list, data_type = 'character')))
job_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
cost_data
select_service_group <- function(current_service_data, current_names_list, data_type){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = current_service_data[[elements_to_use]]
if (data_type == 'numeric'){
current_service_data_element = as.numeric(current_service_data_element)
}
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numerical')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numerical')))
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list, data_type = 'character')))
job_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
product_data
unique(unlist(product_data))
product_data
current_filename_set
unique(unlist(product_data))
sort(unique(unlist(product_data)))
table(unlist(product_data))
sort(table(unlist(product_data)))
sort(as.vector(table(unlist(product_data))))
as.vector(table(unlist(product_data))
)
names(table(unlist(product_data))
)
a = (table(unlist(product_data))
a
a = (table(unlist(product_data)))
names(a)
as.vector(a)
a = (table(unlist(product_data)))
sort(a)
names(a)
a
sort(a)
collated_product_data = table(unlist(product_data))
names(a)
names(a>6000)
inds_to_use = as.vector(collated_product_data) > 0.95*max(as.vector(collated_product_data))
inds_to_use
inds_to_use = as.vector(collated_product_data) > 0.80*max(as.vector(collated_product_data))
inds_to_use
inds_to_use = as.vector(collated_product_data) > 0.50*max(as.vector(collated_product_data))
inds_to_use
max(as.vector(collated_product_data))
collated_product_data
sort(collated_product_data)
inds_to_use = as.vector(collated_product_data) > 1e4
inds_to_use
a[inds_to_use]
names(a)
names(a[ind_to_use])
names(a[inds_to_use])
products_to_use = c("EXTRA CARE","RACV Extra Care","RACV Roadside Car", "RACV Total Care", "ROADSIDE CARE", "TOTAL CARE")
products_to_use
collated_product_data = table(unlist(product_data))
inds_to_use = as.vector(collated_product_data) > 1e4
product_names_to_use = c("EXTRA CARE","RACV Extra Care","RACV Roadside Car", "RACV Total Care", "ROADSIDE CARE", "TOTAL CARE")
which(names(collated_product_data) %in% product_names_to_use)
collated_product_data = table(unlist(product_data))
screened_inds_to_use = as.vector(collated_product_data) > 1e4
reimbursement_names = c("EXTRA CARE","RACV Extra Care", "RACV Total Care", "TOTAL CARE")
product_names_to_use = c("EXTRA CARE","RACV Extra Care","RACV Roadside Car", "RACV Total Care", "ROADSIDE CARE", "TOTAL CARE")
reimbursement_fraction = collated_product_data[which(names(collated_product_data) %in% reimbursement_names)]/
collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]
reimbursement_fraction = sum(as.vector(collated_product_data[which(names(collated_product_data) %in% reimbursement_names)]))/
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)])
)
reimbursement_fraction
collated_product_data
inds_to_use = as.vector(collated_product_data) > 100
as.vector(collated_product_data[inds_to_use])
collated_product_data[inds_to_use]
cost_data
all_names_list
collated_product_data[inds_to_use]
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]))/sum(as.vector(collated_product_data))
hist(unlist(cost_data))
hist(as.numeric(unlist(cost_data)))
cost_data
select_service_group <- function(current_service_data, current_names_list, data_type){
elements_to_use = which(names(current_service_data) %in% current_names_list)
if (length(elements_to_use) > 0){
current_service_data_element = current_service_data[[elements_to_use]]
if (data_type == 'numeric'){
current_service_data_element = as.numeric(current_service_data_element)
}
} else {
current_service_data_element = vector()
}
return(current_service_data_element)
}
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numeric')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numeric')))
hist(as.numeric(unlist(cost_data)))
hist((unlist(cost_data)))
inds_to_use = unlist(cost_data) < 0.95*max(unlist(cost_data))
a = unlist(cost_data)
a[inds_to_use]
hist(a[inds_to_use])
all_names_list <- lapply(seq_along(full_service_list),
function(i) (lapply(seq_along(full_service_list[[i]]),
function(j) names(full_service_list[[i]][[j]]))))
driver_names_list = c('EmpID', 'driver', 'SERV_EMPL_ID', 'Driver.No', 'Van ID')
product_names_list = c('ProductType', 'Product')
rate_names_list = c("RATE Incl GST", "JobRate", "Job Rate", "Total Paid", "Cost")
cost_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], rate_names_list, data_type = 'numeric')))
driver_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], driver_names_list, data_type = 'numeric')))
product_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], product_names_list, data_type = 'character')))
job_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) as.vector(table(driver_data[[i]][[j]]))))
job_numbers_yearly <- lapply(seq_along(driver_data),
function(i) as.vector(table(unlist(driver_data[[i]]))))
driver_numbers_yearly <- lapply(seq_along(driver_data),
function(i) length(unique(unlist(driver_data[[i]]))))
driver_numbers_monthly <- lapply(seq_along(driver_data),
function(i) lapply(seq_along(driver_data[[i]]),
function(j) length(unique(driver_data[[i]][[j]]))))
hist(unlist(driver_numbers_monthly))
hist(unlist(driver_numbers_yearly))
unlist(driver_numbers_yearly)
unlist(job_numbers_yearly)
hist(unlist(job_numbers_yearly))
hist(unlist(job_numbers_monthly))
)collated_product_data
collated_product_data
screened_inds_to_use = as.vector(collated_product_data) > 1e4
collated_product_data[screened_inds_to_use]
a = collated_product_data[screened_inds_to_use]
sum(a[c(1, 2, 4, 6)])
sum(a = collated_product_data[screened_inds_to_use])
2392/176680
driver_numbers_yearly
driver_numbers_monthly
hist(unlist(driver_numbers_monthly))
job_numbers_monthly
hist(unlist(job_numbers_monthly))
hist(unlist(job_numbers_yearly))
all_names_list
unique(unlist(all_names_list))
parts_names_list <- c('Fuel.Parts', 'Parts and Fuel', 'Fuel', 'FUEL incl GST', 'Fuel /Parts Amt')
parts_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], parts_names_list, data_type = 'character')))
parts_data
parts_data <- lapply(seq_along(full_service_list),
function(i) lapply(seq_along(full_service_list[[i]]),
function(j) select_service_group(full_service_list[[i]][[j]], parts_names_list, data_type = 'numeric')))
unlist(parts_data)
hist(unlist(parts_data))
unlist(parts_data) >0
length(unlist(parts_data) >0)
length(unlist(!is.na(parts_data)))
is.na(parts_data)
length(!is.na(unlist(parts_data))))
length(!is.na(unlist(parts_data)))
(!is.na(unlist(parts_data)))
length(which(!is.na(unlist(parts_data))))
parts_data
inds_to_use = (which(!is.na(unlist(parts_data))))
a = unlist(parts_data)
a[inds_to_use]
length(unlist(!is.na(parts_data)))
length(which(!is.na(unlist(parts_data))))
length(which(!is.na(unlist(parts_data))))/176680
hist(unlist(job_numbers_yearly))
length(which(!is.na(unlist(parts_data))))
inds_to_use  = (which(!is.na(unlist(parts_data))))
parts_data[inds_to_use]
inds_to_use  = (which(!is.na(unlist(parts_data))))
inds_to_use
unlist(parts_data)[inds_to_use]
unlist(parts_data)[inds_to_use]
length(unlist(parts_data)[inds_to_use] <1e3)
length(which(unlist(parts_data)[inds_to_use] <1e3))
length(which(unlist(parts_data)[inds_to_use] <1e2))
length(which(unlist(parts_data)[inds_to_use] <1e1))
(table(unlist(parts_data)[inds_to_use]))
(table(unlist(parts_data)[inds_to_use]))
write.table(table(unlist(parts_data)[inds_to_use]), file = '~/Documents/Emrys_job/fuel_data.csv')
as.data.frame(table(unlist(parts_data)[inds_to_use]))
write.table(as.data.frame(table(unlist(parts_data)[inds_to_use])), '~/Documents/Emrys_job/fuel_data.csv')
write.csv(as.data.frame(table(unlist(parts_data)[inds_to_use])), '~/Documents/Emrys_job/fuel_data.csv')
collated_product_data
sort(collated_product_data)
which(names(collated_product_data) == 'CAC-BMW')
sort(collated_product_data[64:length(collated_product_data)])
write.csv(as.data.frame(sort(collated_product_data[64:length(collated_product_data)])), '~/Documents/Emrys_job/RACV_product_data.csv')
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]))/sum(as.vector(collated_product_data))
reimbursement_names = c("EXTRA CARE","RACV Extra Care", "RACV Total Care", "TOTAL CARE")
product_names_to_use = c("EXTRA CARE","RACV Extra Care", "RACV Roadside Care", "RACV Roadside Car", "RACV Total Care", "ROADSIDE CARE", "TOTAL CARE")
inds_to_use = as.vector(collated_product_data) > 100
reimbursement_fraction = sum(as.vector(collated_product_data[which(names(collated_product_data) %in% reimbursement_names)]))/
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]))
reimbursement_fraction
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% reimbursement_names)]))
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]))
reimbursement_fraction = sum(as.vector(collated_product_data[which(names(collated_product_data) %in% reimbursement_names)]))/
sum(as.vector(collated_product_data[which(names(collated_product_data) %in% product_names_to_use)]))
reimbursement_fraction
0.924709097
table(unlist(job_numbers_yearly))
hist(unlist(job_numbers_yearly))
res <- hist(unlist(job_numbers_yearly))
res <- hist(unlist(job_numbers_yearly))
res
res <- hist(unlist(job_numbers_yearly), breaks=20)
res
res <- hist(unlist(job_numbers_yearly), breaks=100)
res
res <- hist(unlist(job_numbers_yearly), breaks=1000)
res
length(unlist(job_numbers_yearly))
length(unlist(job_numbers_yearly) == 0)
length(which(unlist(job_numbers_yearly) == 0))
length(which(unlist(job_numbers_yearly) == 5))
length(which(unlist(job_numbers_yearly) < 5))
length(which(unlist(job_numbers_yearly) < 50))
length(which(unlist(job_numbers_yearly) < 20))
quantile(unlist(job_numbers_yearly))
outliers(unlist(job_numbers_yearly))
6357^2*180
(6357*180)^2
8065  + (15980 – 9206)
8065 + (15980-9206)
6357*180*137*11
factorial(1500)/factorial(900)
factorial(4)
factorial(900)
1450/5
290*180/60
870/60
install.packages("SDMTools")
source('~/.active-rstudio-document', echo=TRUE)
a
image(a)
a
osim.run('~/GitHub/offset_simulator/user_params/initialise_params_grassland.R')
user_plot_params_file = 'plot_params_simulated_data.R'
source(user_plot_params_file)
plot_params <- initialise_plot_params()
osim.plot(plot_params, user_global_params$simulation_folder, run_number = 20, loglevel = 'TRACE')
debugSource('~/Documents/R_Codes/plot_decline_rate_space.R', echo=TRUE)
traceback()
debugSource('~/Documents/R_Codes/plot_decline_rate_space.R', echo=TRUE)
R.version()
R.Version()
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
setwd('~/GitHub/offset_multi_feature/')
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
warnings()
source('~/GitHub/offset_multi_feature/run_offset_simulation_with_simulated_data.R', echo=TRUE)
